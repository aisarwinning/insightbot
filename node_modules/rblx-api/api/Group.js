const essentials = require("../modules/essentials.js");
const xmlParser = require("xml2js").parseString;
exports.getGroupInformation = function(groupID, callback) {
    if ((!groupID) || (!callback)) throw new Error("You are missing arguments from getGroupInformation, please refer to the documentation!");
        essentials.requestURL(`https://api.roblox.com/groups/${groupID}`).then(function(promise) {
        essentials.errorCheck(promise.body);
        const parsedBody = JSON.parse(promise.body);
        callback(parsedBody); //Returns all group information from ID.
    });
};

exports.groupUserExistance = function(userID, groupID, callback) {
    if ((!userID) || (!groupID) || (!callback)) throw new Error("You are missing arguments from groupUserExistance, please refer to the documentation!");
    essentials.checkUserExistance(userID);  
    essentials.requestURL(`https://www.roblox.com/Game/LuaWebService/HandleSocialRequest.ashx?method=IsInGroup&playerid=${userID}&groupid=${groupID}`).then(function(promise) {
    essentials.errorCheck(promise.body);  
    parseString(promise.body, function(err, result) {
        if (err) throw new Error(err);
            callback(result); //Returns if a user exists within a group.
        });
    });
};

exports.getUserRankNumber = function(userID, groupID, callback) {
    if ((!userID) || (!groupID) || (!callback)) throw new Error("You are missing arguments from getUserRankNumber, please refer to the documentation!");
    essentials.checkUserExistance(userID);  
    essentials.requestURL(`https://www.roblox.com/Game/LuaWebService/HandleSocialRequest.ashx?method=GetGroupRank&playerid=${userID}groupid=${groupID}`).then(function(promise) {
        essentials.errorCheck(promise.body);  
        parseString(promise.body, function(err, result) {
        if (err) throw new Error(err);
        callback(result);
        });
    });
};

exports.getUserRankName = function(userID, groupID, callback) {
    if ((!userID) || (!groupID) || (!callback)) throw new Error("You are missing arguments from getUserRankName, please refer to the documentation!");
    essentials.checkUserExistance(userID);
    essentials.requestURL(`https://www.roblox.com/Game/LuaWebService/HandleSocialRequest.ashx?method=GetGroupRole&playerid=${userID}&groupid=${groupID}`).then(function(promise) {
        essentials.errorCheck(promise.body);  
        callback(promise.body);
    });
};

exports.getGroupRanks = function(groupID, callback) {
    if ((!groupID) || (!callback)) throw new Error("You are missing arguments from getGroupRanks, please refer to the documentation!");
    essentials.requestURL(`https://www.roblox.com/api/groups/${groupID}/RoleSets/`).then(function(promise) {
        essentials.errorCheck(promise.body);  
        callback(promise.body); //Returns an array of objects for the group ranks.  
    });
};