const essentials = require("../modules/essentials.js");
exports.checkUsernameExistance = function(username, callback) {
    if ((!username) || (!callback)) throw new Error("You are missing arguments from checkUsernameExistance, please refer to the documentation!");
    essentials.requestURL(`https://www.roblox.com/UserCheck/DoesUsernameExist?username=${username}`).then(function(promise) {
        const parsedBody = JSON.parse(promise).success;
        callback(parsedBody);
    });
};

exports.getUsernameFromID = function(id, callback) {
    if ((!id) || (!callback)) throw new Error("You are missing arguments from getUsernameFromID, please refer to the documentation!");
    essentials.checkUserExistance(id);
    essentials.requestURL(`https://api.roblox.com/Users/${id}`).then(function(promise) {
        const parsedBody = JSON.parse(promise);
        callback(parsedBody.Username);
    });
};

exports.getIDFromUsername = function(username, callback) {
    if ((!username) || (!callback)) throw new Error("You are missing arguments from getIDFromUsername, please refer to the documentation!");
    essentials.requestURL(`https://api.roblox.com/users/get-by-username?username=${username}`).then(function(promise) {
        const parsedBody = JSON.parse(promise);
        callback(parsedBody.Id);
    });
};

exports.getBadgesFromID = function(id, width, height, format, callback) {
    if ((!id) || (!width) || (!height) || (!format) || (!callback)) throw new Error("You are missing arguments from getBadgesFromID, please refer to the documentation!");
    essentials.checkUserExistance(id);
    essentials.requestURL(`https://www.roblox.com/badges/roblox?userId=${id}&imgWidth=${width}&imgHeight=${height}&imgFormat=${format}`).then(function(promise) {
        const parsedBody = JSON.parse(promise);
        callback(parsedBody); // Returns the parsed json from the body.
    });
};

exports.getBestFriendsFromID = function(id, page, size, width, height, format, callback) {
    if((!id) || (!callback) || (!page) || (!size) || (!width) || (!height) || (!format)) throw new Error("You are missing arguments from getBestFriendsFromID, please refer to the documentation!");
    essentials.checkUserExistance(id);
    essentials.requestURL(`https://www.roblox.com/friends/json?userId=${id}&currentPage=${page}&pageSize=${size}&imgWidth=${width}&imgHeight=${height}&imgFormat=${format}&friendsType=BestFriends`).then(function(promise) {
        const parsedBody = JSON.parse(promise);
        callback(parsedBody); // Returns the parsed json from the body.
    });
};